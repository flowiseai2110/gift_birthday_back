create schema config;
create schema proceso;
create schema administrador;


/*Estos son los usuarios encargados de crear los administradores*/
create table config.tipo_enumerado(
	I_TIPO_ENUMERADO_ID INTEGER NOT NULL,
	V_CODIGO varchar(30) NOT NULL,
	V_NOMBRE varchar(200) NOT NULL,
	V_DESCRIPCION varchar(200) NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
	)
	
alter table config.tipo_enumerado add constraint PK_ENUMERADO primary key(I_TIPO_ENUMERADO_ID) ;
  
create table config.enumerado(
	I_ENUMERADO_ID INTEGER NOT NULL,
	I_TIPO_ENUMERADO_ID INTEGER NOT NULL,
	V_CODIGO varchar(200) NOT NULL,
	V_NOMBRE varchar(750) NOT NULL,
	V_DESCRIPCION varchar(750) NOT NULL,
	B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
)

alter table config.enumerado add constraint FK_ENUMERADO_TIPO_ENUMERADO foreign key(I_TIPO_ENUMERADO_ID) references  config.tipo_enumerado(I_TIPO_ENUMERADO_ID);
  
create table administrador.sa(
	I_SA_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	I_PERSONA_ID INTEGER,
 	V_USUARIO VARCHAR(50),
 	V_CONTRASENIA VARCHAR(750),
 	V_TIPO_USUARIO VARCHAR(2),
    B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
)

alter table administrador.usuario add constraint FK_SA_PERSONA foreign key(I_PERSONA_ID) references  administrador.persona(I_PERSONA_ID);

/*Este registra las empresas que son los clientes de la empresa*/
create table administrador.persona(
	I_PERSONA_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	V_NUMERO_DOCUMENTO VARCHAR(25),
	V_TIPO_DOCUMENTO VARCHAR(2),
	V_NOMBRE VARCHAR(50),
	V_APELLIDO_PATERNO VARCHAR(100),
	V_APELLIDO_MATERNO VARCHAR(100),
	D_FECHA_NACIMIENTO  DATE not NULL,
	V_CELULAR VARCHAR(16),
	V_CORREO_ELECTRONICO VARCHAR(120),
    B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
)

create table administrador.rol(
	I_ROL_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	V_CODIGO_ROL VARCHAR(150),
	V_NOMBRE_ROL VARCHAR(150),
	V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
)

--drop table administrador.usuario
create table administrador.usuario(
	I_USUARIO_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	I_PERSONA_ID INTEGER,
 	V_USUARIO VARCHAR(50),
 	V_CONTRASENIA VARCHAR(750),
 	V_TIPO_USUARIO VARCHAR(2),
    B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
)

alter table administrador.usuario add constraint FK_USUARIO_PERSONA foreign key(I_PERSONA_ID) references  administrador.persona(I_PERSONA_ID);


create table administrador.usuario_rol(
	I_USUARIO_ROL_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	I_USUARIO_ID INTEGER not NULL,
	I_ROL_ID INTEGER not null,
	B_ACTIVO boolean NOT NULL,
	V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL 
)

alter table administrador.usuario_rol add constraint FK_USUARIO_ROL foreign key(I_USUARIO_ID) references  administrador.usuario(I_USUARIO_ID);
alter table administrador.usuario_rol add constraint FK_USUARIO_ROL_TABLA foreign key(I_ROL_ID) references  administrador.rol(I_ROL_ID);

create table config.empresa(
	I_EMPRESA_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	V_RAZON_SOCIAL VARCHAR(150),
	V_RUC VARCHAR(25),
	V_DIRECCION VARCHAR(350),
	V_TELEFONO_PRINCIPAL VARCHAR(16),
	V_CELULAR_PRINCIPAL VARCHAR(16),
	B_ACTIVO boolean NOT NULL,
	V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);
 

create table config.local_comercial(
	I_LOCAL_COMERCIAL_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	I_EMPRESA_ID INTEGER,
	V_NOMBRE_COMERCIAL VARCHAR(350),
	V_DIRECCION VARCHAR(350),
	V_TELEFONO_PRINCIPAL VARCHAR(16),
	V_CELULAR_PRINCIPAL VARCHAR(16),
	T_HORA_INICIO TIME,
	T_HORA_FIN TIME, 
	V_TIPO_HORARIO VARCHAR(2), -- ALMACENA EL TIPO DE HORARIO SI ES 24 HORAS O PARCIAL
	B_ACTIVO boolean NOT NULL,
	V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table config.local_comercial add constraint FK_EMPRESA foreign key(I_EMPRESA_ID) references  config.empresa(I_EMPRESA_ID);

create table proceso.cliente(
	I_CLIENTE_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	I_LOCAL_COMERCIAL_ID INTEGER, 
	V_TIPO_CLIENTE VARCHAR(2),
	V_NUMERO_DOCUMENTO VARCHAR(25),
	V_TIPO_DOCUMENTO VARCHAR(2),
	V_NOMBRE VARCHAR(50),
	V_APELLIDO_PATERNO VARCHAR(100),
	V_APELLIDO_MATERNO VARCHAR(100),
	D_FECHA_NACIMIENTO DATE not NULL,
	V_CELULAR VARCHAR(16),
	V_CORREO_ELECTRONICO VARCHAR(16),
    B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table proceso.cliente add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);

create table config.usuario(
	I_USUARIO_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 		
	I_LOCAL_COMERCIAL_ID INTEGER, 
	V_NUMERO_DOCUMENTO VARCHAR(25),
	V_USUARIO VARCHAR(50), --
 	V_CONTRASENIA VARCHAR(750), --
	V_TIPO_USUARIO VARCHAR(2), --
	V_TIPO_DOCUMENTO VARCHAR(2),
	V_NOMBRE VARCHAR(50),
	V_APELLIDO_PATERNO VARCHAR(100),
	V_APELLIDO_MATERNO VARCHAR(100),
	D_FECHA_NACIMIENTO  DATE not NULL,
	V_CELULAR VARCHAR(16),
	V_CORREO_ELECTRONICO VARCHAR(120),
    B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table config.usuario add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);

create table proceso.promocion(
	I_PROMOCION_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	I_LOCAL_COMERCIAL_ID INTEGER,	
	V_TITULO VARCHAR(250), -- Nombre de la promocion
	V_DESCRIPCION VARCHAR(250), -- informacion detallada de la promocion y sus condiciones.
	V_TIPO_PROMOCION VARCHAR(4), -- Nuevo 
	V_RESTRICCIONES VARCHAR(750), --Nuevo
	V_CODIGO_PROMOCION VARCHAR(20), -- Nuevo Tipo descuento.
	D_FECHA_PROMOCION_INICIO TIMESTAMP not NULL,
	D_FECHA_PROMOCION_FIN TIMESTAMP not NULL, -- fecha de vencimiento
	V_ESTADO VARCHAR(2), -- Indica si la promoción está activa, inactiva o programada
	B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);
 
alter table proceso.promocion add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);
 
create table proceso.cartilla(
	I_CARTILLA_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	I_LOCAL_COMERCIAL_ID INTEGER,	
	V_CODIGO VARCHAR(50),
	V_TITULO VARCHAR(250),
	V_DESCRIPCION VARCHAR(250),
	I_CANTIDAD_SELLO INTEGER,
	I_CANTIDAD_PROMOCION INTEGER,
	V_ESTADO VARCHAR(2),
	B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table proceso.cartilla add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);
  
create table proceso.cartilla_promocion(
	I_CARTILLA_PROMOCION_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	I_CARTILLA_ID INTEGER,
	I_PROMOCION_ID INTEGER,
	I_LOCAL_COMERCIAL_ID INTEGER,	 
	V_ESTADO VARCHAR(2),
	B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table proceso.cartilla_promocion add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);
alter table proceso.cartilla_promocion add constraint FK_PROMOCION foreign key(I_PROMOCION_ID) references  proceso.promocion(I_PROMOCION_ID);
alter table proceso.cartilla_promocion add constraint FK_CARTILLA foreign key(I_CARTILLA_ID) references  proceso.cartilla(I_CARTILLA_ID);
 
create table proceso.cliente_cartilla(
	I_CLIENTE_CARTILLA_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,	
	I_CLIENTE_ID INTEGER,
	I_CARTILLA_PROMOCION_ID INTEGER,
	I_LOCAL_COMERCIAL_ID INTEGER,	
	I_NUMERO_PROMOCION INTEGER,
	I_NUMERO_SELLO INTEGER,
	V_ESTADO VARCHAR(2),
	B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table proceso.cliente_cartilla add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);
alter table proceso.cliente_cartilla add constraint FK_CLIENTE foreign key(I_CLIENTE_ID) references  proceso.cliente(I_CLIENTE_ID);
alter table proceso.cliente_cartilla add constraint FK_CARTILLA_PROMOCION foreign key(I_CARTILLA_PROMOCION_ID) references  proceso.cartilla_promocion(I_CARTILLA_PROMOCION_ID);
 
create table proceso.cliente_cartilla_detalle(
	I_CLIENTE_CARTILLA_DETALLE_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,	
	I_CLIENTE_CARTILLA_ID INTEGER, 
	I_NUMERO_PROMOCION INTEGER,
	I_NUMERO_SELLO INTEGER,
	I_LOCAL_COMERCIAL_ID INTEGER,	
	V_REFERENCIA_PAGO VARCHAR(16),
	V_ESTADO VARCHAR(2),
	B_ACTIVO boolean NOT NULL,
    V_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
    D_FECHA_REGISTRO TIMESTAMP not NULL,
    V_USUARIO_MODIFICACION VARCHAR(20) NULL,
    D_FECHA_MODIFICACION TIMESTAMP NULL
);

alter table proceso.cliente_cartilla_detalle add constraint FK_LOCAL_COMERCIAL foreign key(I_LOCAL_COMERCIAL_ID) references  config.local_comercial(I_LOCAL_COMERCIAL_ID);
alter table proceso.cliente_cartilla add constraint FK_CLIENTE_CARTILLA foreign key(I_CLIENTE_CARTILLA_ID) references  proceso.cliente_cartilla(I_CLIENTE_CARTILLA_ID);



